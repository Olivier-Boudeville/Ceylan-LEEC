sudo: required

language: erlang

otp_release:
    - 18.2.1
    - 17.5

env:
    - BOULDER_BUILD=https://acme-v01.api.letsencrypt.org/build

# we only test boulder staging version against last OTP version
matrix:
    include:
        - otp_release: 18.2.1
          env: BOULDER_BUILD=https://acme-staging.api.letsencrypt.org/build
      
addons:
    apt:
        packages:
            - elinks

services:
    - docker

before_install:
    # small files webservers
    - git clone --depth=1 https://github.com/jeanparpaillon/averell.git averell
    - cd averell && make && make
    - cd $TRAVIS_BUILD_DIR
    # letsencrypt server
    - git clone https://github.com/letsencrypt/boulder.git boulder
    - cd boulder
    # we want to test agains version running on prod
    - REV=`http $BOULDER_BUILD|sed -e "s/Boulder=( +\([0-9a-f]\+\) .*/\1/"`
    - echo "using boulder rev +$REV"
    - git checkout $REV
    - docker-compose build
    #
    - cd $TRAVIS_BUILD_DIR

install:
    - ./rebar3 update
    - ./rebar3 compile

before_script:
    # serve CA certificate
    - averell/averell -p 3099 -v boulder&
    #
    - sed -i 's/-it/-i/' boulder/test/run-docker.sh
    - boulder/test/run-docker.sh > /tmp/boulder.log&
    # waiting for boulder being fully started
    - r=1; while [ $r -ne 0 ] ; do http http://localhost:4000/directory 2>/dev/null; r=$?; sleep 5; done


script: 
    - make dialize
    #- http GET http://127.0.0.1:3099/test/test-ca.pem
    - ./rebar3 ct

after_failure:
    - elinks -dump 1 _build/test/logs/ct_run.*/_build.test.logs/run.*/suite.log.html
    - elinks -dump 1 _build/test/logs/ct_run.*/_build.test.logs/run.*/letsencrypt_suite.test_*
    - elinks -dump 1 _build/test/logs/ct_run.*/_build.test.logs/run.*/unexpected_io.log.html
    - cat /tmp/boulder.log
